@inherits ReactiveComponentBase<AddFAQViewModel>
@if (ViewModel != null)
{
    <AlertView Alert="ViewModel.Alert" />
    <MudDialog Visible="ViewModel.IsOpen" Class="px-4 pt-4">
        <DialogContent>
            <div class="d-flex flex-column">
                <div class="d-flex justify-end">
                    <MudIconButton Icon="@Icons.Material.Filled.Close"
                                   OnClick="() => ViewModel.IsOpen = false"
                                   Color="Color.Default"
                                   Class="ml-auto" />
                </div>
                <MudTextField Label="Title" @bind-Value="ViewModel.Title" Variant="Variant.Outlined" />
                <MudTextField Label="Question" @bind-Value="ViewModel.Question" Lines="10" Variant="Variant.Outlined" />
                <MudTextField Label="Answer" @bind-Value="ViewModel.Answer" Lines="10" Variant="Variant.Outlined" />
                <MudTextField Label="Sort Order" @bind-Value="ViewModel.SortOrder" Variant="Variant.Outlined" />
                <MudStack Row="true">

                    <MudIconButton OnClick="ViewModel.Add.BindCommand<MouseEventArgs>()" Icon="@Icons.Material.Filled.AddBox"
                                   Color="Color.Primary" Size="Size.Large" />
                    <MudIconButton OnClick="ViewModel.Cancel.BindCommand<MouseEventArgs>()" Icon="@Icons.Material.Filled.Cancel"
                                   Color="Color.Secondary" Size="Size.Large" />
                </MudStack>

            </div>
        </DialogContent>
    </MudDialog>
}

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && ViewModel != null)
            await ViewModel.Init.Execute().GetAwaiter();
        await base.OnAfterRenderAsync(firstRender);
    }
}
