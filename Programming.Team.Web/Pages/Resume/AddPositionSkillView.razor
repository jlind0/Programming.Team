@inherits ReactiveComponentBase<AddPositionSkillViewModel>

@if (ViewModel != null)
{
    <AlertView Alert="ViewModel.Alert" />
    <MudDialog 
        @bind-Visible="ViewModel.IsOpen"
               DisableBackdropClick="true"
               Class="add-skill-dialog">
        <DialogContent>
            <div class="d-flex flex-column">
                <div class="d-flex justify-content-end">
                    <MudIconButton Icon="@Icons.Material.Filled.Close"
                                   Class="close-button"
                                   Color="Color.Default"
                                   OnClick="CloseDialog" />
                </div>

                <MudStack>
                    <SearchSelectEntityView TAddView="AddSkillView"
                                            TEntity="Skill" TKey="Guid" TAddViewModel="AddSkillViewModel"
                                            TSearchSelectViewModel="SearchSelectSkillViewModel"
                                            ViewModel="ViewModel.SkillSelectorViewModel" />
                    <SmartTextEditor TViewModel="AddPositionSkillViewModel" ViewModel="ViewModel.SmartTextEditor" />
                    <MudStack Row="true">
                        <MudButton OnClick="ViewModel.Add.BindCommand<MouseEventArgs>()" Class="fw-bold"
                                   Variant="Variant.Filled" Color="Color.Primary">
                            Add Skill
                        </MudButton>
                        <MudButton OnClick="ViewModel.Cancel.BindCommand<MouseEventArgs>()" Class="fw-bold"
                                   Variant="Variant.Filled" Color="Color.Primary">
                            Cancel
                        </MudButton>
                    </MudStack>
                </MudStack>
            </div>
        </DialogContent>
    </MudDialog>
}

@code {


    private void CloseDialog()
    {
        ViewModel.IsOpen = false;
    }
}
